version: 2.1

orbs: 
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  docker: circleci/docker@2.1.3
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
  build-image:
    docker:
      - image: ubuntu
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apt update
            apt install -y curl zip
            # install awscli
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            # install docker
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: build docker image
          command: |
            docker build -t ${docker_image}:${CIRCLE_WORKFLOW_ID:0:7} .
      - run:
          name: build & upload docker image
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${docker_repo}
            docker tag ${docker_image}:${CIRCLE_WORKFLOW_ID:0:7} ${docker_repo}/${docker_image}:${CIRCLE_WORKFLOW_ID:0:7}
            docker push ${docker_repo}/${docker_image}:${CIRCLE_WORKFLOW_ID:0:7}
            docker logout
  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - kubernetes/install:
          kubectl-version: v1.24.4
      - aws-eks/create-cluster:
          config-file: generated-cluster.yaml
      - run:
          name: deploy to aws
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${docker_repo}
            kubectl run capstone-pod --image=${docker_repo}/${docker_image}:${CIRCLE_WORKFLOW_ID:0:7} --port=5000
              
workflows:
  build:
    jobs:
      - build
      - build-image:
          requires:
            - build
          filters:
            branches:
              only: [main]
      - deploy: 
          requires:
            - build-image